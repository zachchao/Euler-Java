import java.util.ArrayList;


/**
*12/20/17
*Each new term in the Fibonacci sequence is generated by adding the previous 
*two terms. By starting with 1 and 2, the first 10 terms will be:
*1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
*By considering the terms in the Fibonacci sequence whose values do not exceed 
*four million, find the sum of the even-valued terms.
*/
public class Project2 {
	public static void main(String[] args) {
		ArrayList<Integer> fibs = (fibs(4000000));
		int sum = 0;
		for(int i : fibs) {
			if(i % 2 == 0) {
				sum += i;
			}
		}
		System.out.println(sum);
	}
	
	//Starter method
	public static ArrayList<Integer> fibs(int limit){
		ArrayList<Integer> ray = new ArrayList<Integer>();
		ray.add(1);
		ray.add(2);
		ray = fibs(limit, ray);
		ray.remove(ray.size() - 1);
		return ray;
	}
	
	//Recursive method
	public static ArrayList<Integer> fibs(int limit, ArrayList<Integer> ray) {
		if(ray.get(ray.size() - 1) >= limit){
			return ray;
		}
		//n-1
		int x = ray.get(ray.size() - 1);
		//n-2
		int y = ray.get(ray.size() - 2);
		ray.add(x + y);
		return fibs(limit, ray);
	}
}
